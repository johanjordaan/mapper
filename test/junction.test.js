// Generated by CoffeeScript 1.6.3
(function() {
  var define;

  if (typeof define === "undefined" || define === null) {
    define = require('amdefine')(module);
  }

  define(['chai', '../lib/junction'], function(chai, junction) {
    var expect, should;
    should = chai.should();
    expect = chai.expect;
    describe('create', function() {
      return it('should create a new clean junction context', function() {
        var j;
        j = junction.create();
        j.count.should.equal(0);
        return j.results.length.should.equal(0);
      });
    });
    return describe('call', function() {
      it('should call the the function (without a callback) and save the results in the context', function(done) {
        var add, j;
        j = junction.create();
        add = function(a, b) {
          j.count.should.equal(1);
          return a + b;
        };
        junction.call(j, add, 3, 5);
        return junction.finalise(j, function(results) {
          j.count.should.equal(0);
          j.results.length.should.equal(1);
          results.length.should.equal(1);
          results[0].should.equal(8);
          return done();
        });
      });
      return it('should call the the function (with a callback) and save the results in the context', function(done) {
        var add, j;
        j = junction.create();
        add = function(a, b, cb) {
          j.count.should.equal(1);
          return cb(a + b);
        };
        junction.call(j, add, 3, 5, function(sum) {
          sum.should.equal(8);
          return j.count.should.equal(1);
        });
        return junction.finalise(j, function(results) {
          j.count.should.equal(0);
          j.results.length.should.equal(1);
          results.length.should.equal(1);
          results[0].should.equal(8);
          return done();
        });
      });
    });
  });

}).call(this);
